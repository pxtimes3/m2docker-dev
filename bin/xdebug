#!/usr/bin/env bash

INIPATH=$(docker-compose exec -T -u root phpfpm bash -c "php --ini | grep xdebug | sed 's/,//g'")
INICONTENT=$(docker-compose exec -T -u root phpfpm bash -c "cat $INIPATH")
XDEBUGPATH=$(docker-compose exec -T -u root phpfpm pecl list-files xdebug | grep -E -o 'src .*' | awk -F " " '{print $2}' | sed -E 's/ //g')

function installXdebug()
{
  if [[ $INICONTENT != "zend_extension=${XDEBUGPATH}" ]]; then
    echo -e "Xdebug not configured properly..."
    echo -e "${INICONTENT}"
    echo -e "Setting docker-php-ext-xdebug.ini to zend_extension=${XDEBUGPATH}"
    (docker-compose exec -T -u root phpfpm bash -c "echo zend_extension=${XDEBUGPATH} > /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini")
    echo -e "Restarting the phpfpm container..."
    (docker-compose restart phpfpm)
  else
    echo -e "Xdebug is already enabled and active... "
  fi
}

function disableXdebug()
{
  SEMICOLON=$(grep -Eco '^;zend_extension' <<< "${INICONTENT}")

  if [ "$SEMICOLON" != "1" ]; then
    (docker-compose exec -T -u root phpfpm bash -c "sed -Ei 's/^zend_extension/;zend_extension/g' ${INIPATH}")
    echo -e "Restarting the phpfpm container..."
    (docker-compose restart phpfpm)
    statusXdebug
  else
    statusXdebug
  fi
}

function enableXdebug()
{
  SEMICOLON=$(grep -Eco '^;zend_extension' <<< "${INICONTENT}")
  
  if [ "$SEMICOLON" == "1" ]; then
    (docker-compose exec -T -u root phpfpm bash -c "sed -Ei 's/^;zend_extension/zend_extension/g' ${INIPATH}")
    echo -e "Restarting the phpfpm container..."
    (docker-compose restart phpfpm)
    statusXdebug
  else
    statusXdebug
  fi
}

function statusXdebug()
{
  INICONTENT=$(docker-compose exec -T -u root phpfpm bash -c "cat $INIPATH")
  SEMICOLON=$(grep -Eco '^;zend_extension' <<< "${INICONTENT}")
  PORT=$(docker-compose exec -T -u root phpfpm bash -c "php -i | grep -e xdebug.client.port | awk '{print \$5}'")
  #echo "${INICONTENT}"
  if [[ "$SEMICOLON" == "1" ]]; then
    echo -e "Xdebug is disabled"
  else
    echo -e "Xdebug is enabled on port ${PORT}"
  fi
}

function iniXdebug()
{
  INICONTENT=$(docker-compose exec -T -u root phpfpm bash -c "php -i | grep -e 'xdebug\.'")
  echo -e "${INICONTENT}"
}

function usage() 
{
  echo -e "Usage:"
    echo -e ""
    echo -e "$ bin/xdebug [ARG]" 
    echo -e ""
    echo -e "Arguments:"
    echo -e "-i, --install"
    echo -e "  Installs (or checks the config) Xdebug"
    echo -e "-e, --enableXdebug"
    echo -e "  Start Xdebug"
    echo -e "-d, --disable"
    echo -e "  Disables Xdebug"
    echo -e "-s, --status"
    echo -e "  Xdebug status"
    echo -e "--ini"
    echo -e "  Displays all Xdebug-settings as reported by php -i"
}

if [ ! "$1" ]; then
  echo -e "Please provide an argument"
  usage
fi

while (( "$#" )); do
  case "$1" in
    -i|--install)
      installXdebug
      shift
      ;;
    -e|--enable)
      enableXdebug
      shift
      ;;
    -d|--disable)
      disableXdebug
      shift
      ;;
    -s|--status)
      statusXdebug
      shift
      ;;
    --ini)
      iniXdebug
      shift
      ;;
    *)
      echo "Error: Unsupported flag $1"
      usage
      exit 1
      ;;
  esac
done
